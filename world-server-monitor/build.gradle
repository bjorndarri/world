plugins {
    id "world.server-monitor"
}

dependencies {
    runtimeOnly(libs.codion.swing.framework.server.monitor)
    runtimeOnly(libs.codion.plugin.logback.proxy)
}

applicationDefaultJvmArgs = [
        "-Xmx512m",
        "-Dcodion.server.hostname=${serverHost}",
        "-Dcodion.server.registryPort=${serverRegistryPort}",
        "-Dcodion.client.trustStore=truststore.jks",
        "-Dcodion.client.trustStorePassword=crappypass",
        "-Dlogback.configurationFile=logback.xml",
        "-Dcodion.server.admin.user=scott:tiger"
]

application {
    mainModule.set("is.codion.swing.framework.server.monitor")
    mainClass.set("is.codion.swing.framework.server.monitor.ui.EntityServerMonitorPanel")
}

jlink {
//    imageName.set(project.name + "-" + project.version)
    moduleName.set(application.mainModule)
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages", "--add-modules",
               "java.naming,is.codion.plugin.logback.proxy"]

    launcher {
        jvmArgs = applicationDefaultJvmArgs
        jvmArgs += ["--add-reads", "world.merged.module=org.slf4j"]//for sslcontext-kickstart
    }

    jpackage {
        imageName = "World-Server-Monitor"
        appVersion = project.version.replace("-SNAPSHOT", "")
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = "deb"
            icon = "../world.png"
            installerOptions = [
                    "--resource-dir", "build/jpackage/World-Server-Monitor/lib",
                    "--linux-shortcut"
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = "msi"
            icon = "../world.ico"
            installerOptions = [
                    "--win-menu",
                    "--win-shortcut"
            ]
        }
    }
}

prepareMergedJarsDir.doLast {
    copy {
        from "src/main/resources"
        into "$jlinkBasePath/mergedjars"
    }
}